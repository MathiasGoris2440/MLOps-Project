name: Retrain AI Model

on:
  push:
    paths:
      - 'profit-predictor/code/train.py'
      - 'profit-predictor/pipeline.yaml'
      - 'profit-predictor/train_regressor.yaml'

jobs:
  train-model:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Azure CLI and ML extension
        run: |
          pip install azure-cli
          az extension add -n ml -y

      - name: Azure login
        run: |
          az login --service-principal `
            --username $env:AZURE_CLIENT_ID `
            --password $env:AZURE_CLIENT_SECRET `
            --tenant $env:AZURE_TENANT_ID
          az account set --subscription $env:AZURE_SUBSCRIPTION_ID
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure Azure ML defaults
        run: |
          az configure --defaults `
            group=${{ secrets.AZURE_RESOURCE_GROUP }} `
            workspace=${{ secrets.AZURE_WORKSPACE_NAME }}
      
      - name: Submit Azure ML pipeline
        run: |
          $jobId = az ml job create --file profit-predictor/pipeline.yaml --query name -o tsv
          echo "JOB_ID=$jobId" >> $env:GITHUB_ENV

      - name: Wait for job to complete
        run: |
          $jobId = $env:JOB_ID
          do {
            $status = az ml job show --name $jobId --query status -o tsv
            Write-Output "Current status: $status"
            Start-Sleep -Seconds 10
          } while ($status -eq "Queued" -or $status -eq "NotStarted" -or $status -eq "Running")

          if ($status -ne "Completed") {
            Write-Error "Job failed with status: $status"
            exit 1
          }


      - name: Remove old model from inference folder
        run: |
          if (Test-Path "inference/smurf-regressor") {
            Remove-Item -Recurse -Force "inference/smurf-regressor"
          }

      - name: Download new trained model
        run: |
          az ml model download \
            --name smurf-regressor \
            --version latest \
            --download-path ./inference
